const params = arguments[0],
   flowName = params.$Input.flowName,
   model = skuid.$M(params.$Input.model),
   variableRows = model.getRows();

// Cleaning up model rows to use as flow variables
// Otherwise, this array can cause an error when retrieved
// by the Lightning component controller
let allowedKeys = ['name','type','value']
const cleanObject = (obj, allowedKeys) => {
    Object.keys(obj).forEach(key => {
        if (!allowedKeys.includes(key)) {
            delete obj[key];
        }
    });
    return obj;
};
const removeEmptyObjects = (arr) => {
    return arr.filter(obj => Object.keys(obj).length > 0);
};
let variables = variableRows
    .map(obj => cleanObject(obj, allowedKeys))
    .filter(obj => Object.keys(obj).length > 0);

// Create the event and its payload
let skuidAuraEvt = window.$A.get("e.skuid:event"),
    eventPayload = {
    "name": "showModalFlow",
    "source": "skuid",
    "data": {
       flowName: flowName,
       variables: variables
    }
};

// Set the event payload and publish
skuidAuraEvt.setParams(eventPayload);
skuidAuraEvt.fire();